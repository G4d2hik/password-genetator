/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Получение всех элементов со страницы\r\nconst resultEl = document.getElementById('result');\r\nconst lengthEl = document.getElementById('length');\r\nconst uppercaseEl = document.getElementById('uppercase');\r\nconst lowercaseEl = document.getElementById('lowercase');\r\nconst numbersEl = document.getElementById('numbers');\r\nconst symbolsEl = document.getElementById('symbols');\r\nconst generateEl = document.getElementById('generate');\r\nconst clipboard = document.getElementById('clipboard');\r\n\r\n// Функции по генерации рандомных символов \r\nfunction getRandomLower() {\r\n    return String.fromCharCode(Math.floor(Math.random() * 26) + 97);\r\n}\r\n\r\nfunction getRandomUpper() {\r\n    return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n}\r\n\r\nfunction getRandomNumber() {\r\n    return +String.fromCharCode(Math.floor(Math.random() * 10) + 48);\r\n}\r\n\r\nfunction getRandomSymbol() {\r\n    const symbols = \"`~!@#$%^&*()_-+={}[]|:;'<>,.?/\";\r\n    return symbols[Math.floor(Math.random() * symbols.length)];\r\n}\r\n\r\nconst randomFunc = {\r\n    lower: getRandomLower,\r\n    upper: getRandomUpper,\r\n    number: getRandomNumber,\r\n    symbol: getRandomSymbol\r\n};\r\n\r\nclipboard.addEventListener('click', () => {\r\n    const textarea = document.createElement('textarea');\r\n    const password = resultEl.innerText;\r\n\r\n    if (!password) { return; }\r\n\r\n    textarea.value = password;\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    document.execCommand('copy');\r\n    textarea.remove();\r\n    alert('Пароль успешно скопирован');\r\n});\r\n\r\ngenerateEl.addEventListener('click', () => {\r\n    const length = +lengthEl.value;\r\n    const hasLower = lowercaseEl.checked;\r\n    const hasUpper = uppercaseEl.checked;\r\n    const hasNumber = numbersEl.checked;\r\n    const hasSymbol = symbolsEl.checked;\r\n\r\n    resultEl.innerText = generatePassword(hasLower, hasUpper, hasNumber, hasSymbol, length);\r\n});\r\n\r\n\r\n// Функция генерации пароля\r\nfunction generatePassword(lower, upper, number, symbol, length) {\r\n    let generatedPassword = '';\r\n    const typesCount = lower + upper + number + symbol;\r\n    const typesArr = [{ lower }, { upper }, { number }, { symbol }].filter(item => Object.values(item)[0]);\r\n\r\n    // Если все инпуты не выбраны, то возвращает пустую строку\r\n    if (typesCount === 0) {\r\n        return '';\r\n    }\r\n\r\n    for (let i = 0; i < length; i += typesCount) {\r\n        typesArr.forEach(type => {\r\n            const funcName = Object.keys(type)[0];\r\n            generatedPassword += randomFunc[funcName]();\r\n        });\r\n    }\r\n\r\n    const finalPassword = generatedPassword.slice(0, length);\r\n\r\n    return finalPassword;\r\n}\r\n\n\n//# sourceURL=webpack://gulp-config/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;